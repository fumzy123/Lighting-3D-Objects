stage = [
  -1.0,  1.0, -13.0,
  -1.0,  1.0,  13.0,
  1.0,  1.0,  13.0,
  1.0,  1.0, -13.0,

];


stage_indics = [
0 , 1 , 2 ,    0, 2, 3

];

stageNormal = [
  0.0,1.0,0.0,
  0.0,1.0,0.0,
  0.0,1.0,0.0,
  0.0,1.0,0.0,
]

stagecolor = [
  1, 1, 1, 0,
  1, 1, 1, 0, 
  1, 1, 1, 0,
  1, 1, 1, 0,
  1, 1, 1, 0, 
  1, 1, 1, 0,
];

cubeVert = [
    -1.0, -1.0,  1.0,
    1.0, -1.0,  1.0,
    1.0,  1.0,  1.0,
    -1.0,  1.0,  1.0,
    // Back face
    -1.0, -1.0, -1.0,
    -1.0,  1.0, -1.0,
    1.0,  1.0, -1.0,
    1.0, -1.0, -1.0,
    // Top face
    -1.0,  1.0, -1.0,
    -1.0,  1.0,  1.0,
    1.0,  1.0,  1.0,
    1.0,  1.0, -1.0,
    // Bottom face
    -1.0, -1.0, -1.0,
    1.0, -1.0, -1.0,
    1.0, -1.0,  1.0,
    -1.0, -1.0,  1.0,
    // Right face
    1.0, -1.0, -1.0,
    1.0,  1.0, -1.0,
    1.0,  1.0,  1.0,
    1.0, -1.0,  1.0,
    // Left face
    -1.0, -1.0, -1.0,
    -1.0, -1.0,  1.0,
    -1.0,  1.0,  1.0,
    -1.0,  1.0, -1.0
  ];
  const cubeNormal = [
    // Front
     0.0,  0.0,  1.0,
     0.0,  0.0,  1.0,
     0.0,  0.0,  1.0,
     0.0,  0.0,  1.0,

    // Back
     0.0,  0.0, -1.0,
     0.0,  0.0, -1.0,
     0.0,  0.0, -1.0,
     0.0,  0.0, -1.0,

    // Top
     0.0,  1.0,  0.0,
     0.0,  1.0,  0.0,
     0.0,  1.0,  0.0,
     0.0,  1.0,  0.0,


    // Bottom
     0.0, -1.0,  0.0,
     0.0, -1.0,  0.0,
     0.0, -1.0,  0.0,
     0.0, -1.0,  0.0,
 

    // Right
     1.0,  0.0,  0.0,
     1.0,  0.0,  0.0,
     1.0,  0.0,  0.0,
     1.0,  0.0,  0.0,
  

    // Left
    -1.0,  0.0,  0.0,
    -1.0,  0.0,  0.0,
    -1.0,  0.0,  0.0,
    -1.0,  0.0,  0.0,
  
  ];
  var cubeVertexIndices = [
    0, 1, 2,      0, 2, 3,    // Front face
    4, 5, 6,      4, 6, 7,    // Back face
    8, 9, 10,     8, 10, 11,  // Top face
    12, 13, 14,   12, 14, 15, // Bottom face
    16, 17, 18,   16, 18, 19, // Right face
    20, 21, 22,   20, 22, 23  // Left face
  ];


  cubecolors = [
    .0, 0.7, 0.0, 1.0, // Front face
    .0, 1.0, 0.8, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    1.0, 0.5, 0.5, 1.0, // Bottom face
    1.0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0,  // Left face
    .0, 0.0, 0.0, 1.0, // Front face
    .0, 1.0, 0.0, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    .0, 0.5, 0.5, 1.0, // Bottom face
    .0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0,  // Left face
    .0, 0.0, 0.0, 1.0, // Front face
    .0, 1.0, 0.0, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    .0, 0.5, 0.5, 1.0, // Bottom face
    .0, 0.0, 1.0, 1.0, // Right face
    .0, 0.0, 1.0, 1.0,  // Left face
    .0, 0.0, 0.0, 1.0, // Front face
    .0, 1.0, 0.0, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    .0, 0.5, 0.5, 1.0, // Bottom face
    .0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0  // Left face

    
  ];


  function calculateNormal(x1,y1,z1, x2,y2,z2, x3,y3,z3, normals){
    var p0 = vec3.fromValues(x1,y1,z1);
    var p1 = vec3.fromValues(x2,y2,z2);
    var p2 = vec3.fromValues(x3,y3,z3);

    var U = vec3.create();
    var V = vec3.create();
    vec3.subtract(U, p2, p0);
    vec3.subtract(V, p1, p0);

    var normal = vec3.create();
    vec3.cross(normal, V, U);
    console.log(normal);

    //vec3.normalize(normal,normal);
    
    normals.push(normal[0], normal[1], normal[2]);
    
  }
  


cuboid = [
    //front face
    -3.0, -1.0,  1.0,
    3.0, -1.0,  1.0,
    3.0,  1.0,  1.0,
    -3.0,  1.0,  1.0,
    // Back face
    -3.0, -1.0, -1.0,
    -3.0,  1.0, -1.0,
    3.0,  1.0, -1.0,
    3.0, -1.0, -1.0,
    // Top face
    -3.0,  1.0, -1.0,
    -3.0,  1.0,  1.0,
    3.0,  1.0,  1.0,
    3.0,  1.0, -1.0,
    // Bottom face
    -3.0, -1.0, -1.0,
    3.0, -1.0, -1.0,
    3.0, -1.0,  1.0,
    -3.0, -1.0,  1.0,
    // Right face
    3.0, -1.0, -1.0,
    3.0,  1.0, -1.0,
    3.0,  1.0,  1.0,
    3.0, -1.0,  1.0,
    // Left face
    -3.0, -1.0, -1.0,
    -3.0, -1.0,  1.0,
    -3.0,  1.0,  1.0,
    -3.0,  1.0, -1.0

]

var cuboidVertexIndices = [
    0, 1, 2,      0, 2, 3,    // Front face
    4, 5, 6,      4, 6, 7,    // Back face
    8, 9, 10,     8, 10, 11,  // Top face
    12, 13, 14,   12, 14, 15, // Bottom face
    16, 17, 18,   16, 18, 19, // Right face
    20, 21, 22,   20, 22, 23  // Left face
];

cuboidNormal = [
  // Front
  0.0,  0.0,  1.0,
  0.0,  0.0,  1.0,
  0.0,  0.0,  1.0,
  0.0,  0.0,  1.0,

 // Back
  0.0,  0.0, -1.0,
  0.0,  0.0, -1.0,
  0.0,  0.0, -1.0,
  0.0,  0.0, -1.0,

 // Top
  0.0,  1.0,  0.0,
  0.0,  1.0,  0.0,
  0.0,  1.0,  0.0,
  0.0,  1.0,  0.0,


 // Bottom
  0.0, -1.0,  0.0,
  0.0, -1.0,  0.0,
  0.0, -1.0,  0.0,
  0.0, -1.0,  0.0,


 // Right
  1.0,  0.0,  0.0,
  1.0,  0.0,  0.0,
  1.0,  0.0,  0.0,
  1.0,  0.0,  0.0,


 // Left
 -1.0,  0.0,  0.0,
 -1.0,  0.0,  0.0,
 -1.0,  0.0,  0.0,
 -1.0,  0.0,  0.0,

]

cuboidcolors = [
    1.0, 0.7, 0.0, 1.0, // Front face
    1.0, 1.0, 0.8, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    1.0, 0.5, 0.5, 1.0, // Bottom face
    1.0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0,  // Left face
    1.0, 0.0, 0.0, 1.0, // Front face
    1.0, 1.0, 0.0, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    1.0, 0.5, 0.5, 1.0, // Bottom face
    1.0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0,  // Left face
    1.0, 0.0, 0.0, 1.0, // Front face
    1.0, 1.0, 0.0, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    1.0, 0.5, 0.5, 1.0, // Bottom face
    1.0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0  // Left face
  ];


 butterfly = [

    0.0, 3.0, -1.0,
    0.0, -3.0, -1.0,
    2.0, 0.0, 1.0,

    0.0, 3.0, -1.0, 
    -2.0, 0.0, 1.0,
    0.0, -3.0, -1.0, 
 

  ];

  var butterflyVertexIndices = [
    0, 1, 2,     //right side
    3, 4, 5
    
];

butterflycolors = [
    1.0, 0.7, 0.0, 1.0, // Front face
    1.0, 1.0, 0.8, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    1.0, 0.5, 0.5, 1.0, // Bottom face           
  ];


  butterfly_normal = [
    1.0,0.0,0.0,
    1.0,0.0,0.0,
    1.0,0.0,0.0,
    1.0,0.0,0.0,
    1.0,0.0,0.0,
    1.0,0.0,0.0,

  ];

  // console.log("Butterfly normal")
  // calculateNormal( 2.0, 0.0, 1.0, 0.0, 3.0, -1.0, 0.0, -3.0, -1.0, butterfly_normal);
  // calculateNormal( 2.0, 0.0, 1.0, 0.0, 3.0, -1.0, 0.0, -3.0, -1.0, butterfly_normal);
  // calculateNormal( 2.0, 0.0, 1.0, 0.0, 3.0, -1.0, 0.0, -3.0, -1.0, butterfly_normal);

  // calculateNormal(0.0, 3.0, -1.0, -2.0, 0.0, 1.0, 0.0, -3.0, -1.0, butterfly_normal);
  // calculateNormal(0.0, 3.0, -1.0, -2.0, 0.0, 1.0, 0.0, -3.0, -1.0, butterfly_normal);
  // calculateNormal(0.0, 3.0, -1.0, -2.0, 0.0, 1.0, 0.0, -3.0, -1.0, butterfly_normal);




  prism = [
    -1.83,-1.05,2,
    0,0.7,2,
    1.83, -1.05,2,

    -1.83,-1.05,-2,
    0,0.7,-2,
    1.83, -1.05,-2,

    0,0.7,2,
    1.83, -1.05,-2,
    1.83,-1.05,2,

    0,0.7,2,
    1.83, -1.05,-2,
    0,0.7,-2,

    -1.83,-1.05,2,
    1.83, -1.05,2,
    -1.83,-1.05,-2,

    -1.83,-1.05,-2,
    1.83, -1.05,-2,
    1.83,-1.05,2,

    0,0.7,2,
    -1.83, -1.05,2,
    0,0.7,-2,

    0,0.7,-2,
    -1.83, -1.05,-2,
    -1.83, -1.05,2,
  ]

  prism_index = [
    0,1,2, //front face
    3,4,5, //back face
    6,7,8, // right face
    9,10,11, // right face
    12,13,14, //bottom face
    15,16,17, //bottom face
    18,19,20, //left face
    21,22,23, //left face
  ];


  prism_normal = []

  console.log("prism normal")
  console.log("front face")
  calculateNormal(1.83, -1.05,2, 0,0.7,2, -1.83,-1.05,2,  prism_normal);
  calculateNormal(1.83, -1.05,2, 0,0.7,2, -1.83,-1.05,2,  prism_normal);
  calculateNormal(1.83, -1.05,2, 0,0.7,2, -1.83,-1.05,2,  prism_normal);
  
  console.log("back face")
  calculateNormal(-1.83,-1.05,-2, 0,0.7,-2, 1.83, -1.05,-2, prism_normal);
  calculateNormal(-1.83,-1.05,-2, 0,0.7,-2, 1.83, -1.05,-2, prism_normal);
  calculateNormal(-1.83,-1.05,-2, 0,0.7,-2, 1.83, -1.05,-2, prism_normal);
  
  console.log("right face 1&2")
  calculateNormal(1.83, -1.05,-2,  0,0.7,2,  1.83,-1.05,2, prism_normal);
  calculateNormal(1.83, -1.05,-2,  0,0.7,2,  1.83,-1.05,2, prism_normal);
  calculateNormal(1.83, -1.05,-2,  0,0.7,2,  1.83,-1.05,2, prism_normal);
  
  calculateNormal(1.83, -1.05,-2,  0,0.7,2,  1.83,-1.05,2, prism_normal);
  calculateNormal(1.83, -1.05,-2,  0,0.7,2,  1.83,-1.05,2, prism_normal);
  calculateNormal(1.83, -1.05,-2,  0,0.7,2,  1.83,-1.05,2, prism_normal);
  
  console.log("bottom face 1&2")
  calculateNormal( -1.83,-1.05,2, -1.83,-1.05,-2, 1.83, -1.05,2,prism_normal);
  calculateNormal( -1.83,-1.05,2, -1.83,-1.05,-2, 1.83, -1.05,2,prism_normal);
  calculateNormal( -1.83,-1.05,2, -1.83,-1.05,-2, 1.83, -1.05,2,prism_normal);
  
  calculateNormal( -1.83,-1.05,2, -1.83,-1.05,-2, 1.83, -1.05,2, prism_normal);
  calculateNormal( -1.83,-1.05,2, -1.83,-1.05,-2, 1.83, -1.05,2, prism_normal);
  calculateNormal( -1.83,-1.05,2, -1.83,-1.05,-2, 1.83, -1.05,2, prism_normal);
  
  console.log("left face 1&2")
  calculateNormal(0,0.7,2, 0,0.7,-2, -1.83, -1.05,2, prism_normal);
  calculateNormal(0,0.7,2, 0,0.7,-2, -1.83, -1.05,2, prism_normal);
  calculateNormal(0,0.7,2, 0,0.7,-2, -1.83, -1.05,2, prism_normal);
  
  calculateNormal(0,0.7,2, 0,0.7,-2, -1.83, -1.05,2, prism_normal);
  calculateNormal(0,0.7,2, 0,0.7,-2, -1.83, -1.05,2, prism_normal);
  calculateNormal(0,0.7,2, 0,0.7,-2, -1.83, -1.05,2, prism_normal);

  prism_color = [
    1, 0.7, 0.9, 1,
    0.8, 0.65, 0.4, 1,
    0,6, 1, , 0.9, 1,
    1, 0.4, 1, 1,
    1, 1, 0.1, 1,
    0.7, 0, 0.9, 1,
    1.0, 0.5, 0.5, 1.0, 
    1.0, 0.0, 1.0, 1.0, 
    0.0, 0.0, 1.0, 1.0,  
    1.0, 0.0, 0.0, 1.0, 
    1.0, 1.0, 0.0, 1.0, 
    0.0, 1.0, 0.0, 1.0,
    1.0, 0.0, 0.0, 1.0, 
    1.0, 1.0, 0.0, 1.0, 
    0.0, 1.0, 0.0, 1.0, 
    1.0, 0.7, 0.0, 1.0, // Front face
    1.0, 1.0, 0.8, 1.0, // Back face
    0.0, 1.0, 0.0, 1.0, // Top face
    1.0, 0.5, 0.5, 1.0, // Bottom face
    1.0, 0.0, 1.0, 1.0, // Right face
    0.0, 0.0, 1.0, 1.0,  // Left face
  ]


  tetrahedron = [
    -1.0, -1.0,  1.0,
    1.0, -1.0,  1.0,
    1.0,  1.0,  1.0,
    -1.0,  1.0,  1.0,
    // Back face
    -1.0, -1.0, -1.0,
    -1.0,  1.0, -1.0,
    1.0,  1.0, -1.0,
    1.0, -1.0, -1.0,
    // Top face
    -1.0,  1.0, -1.0,
    -1.0,  1.0,  1.0,
    1.0,  1.0,  1.0,
    1.0,  1.0, -1.0,
    // Bottom face
    -1.0, -1.0, -1.0,
    1.0, -1.0, -1.0,
    1.0, -1.0,  1.0,
    -1.0, -1.0,  1.0,
    // Right face
    1.0, -1.0, -1.0,
    1.0,  1.0, -1.0,
    1.0,  1.0,  1.0,
    1.0, -1.0,  1.0,
    // Left face
    -1.0, -1.0, -1.0,
    -1.0, -1.0,  1.0,
    -1.0,  1.0,  1.0,
    -1.0,  1.0, -1.0

  ];

  tetrahedronIndex = [
    0, 1, 2,      0, 2, 3,    // Front face
    4, 5, 6,      4, 6, 7,    // Back face
    8, 9, 10,     8, 10, 11,  // Top face
    12, 13, 14,   12, 14, 15, // Bottom face
    16, 17, 18,   16, 18, 19, // Right face
    20, 21, 22,   20, 22, 23  // Left face
  ];

  tetrahedronColor = [
    0.7, 0, 0.9, 1,
    1.0, 0.5, 0.5, 1.0, 
    1.0, 0.0, 1.0, 1.0, 
    0.0, 0.0, 1.0, 1.0, 
    1, 0.4, 1, 1,
    1, 1, 0.1, 1,
    0.7, 0, 0.9, 1,
    1.0, 0.5, 0.5, 1.0,  
    1.0, 0.0, 0.0, 1.0, 
    1.0, 1.0, 0.0, 1.0, 
    0.0, 1.0, 0.0, 1.0,
    1.0, 0.0, 0.0, 1.0,
  ];

  tetra_normals = [
    // Front
    0.0,  0.0,  1.0,
    0.0,  0.0,  1.0,
    0.0,  0.0,  1.0,
    0.0,  0.0,  1.0,

   // Back
    0.0,  0.0, -1.0,
    0.0,  0.0, -1.0,
    0.0,  0.0, -1.0,
    0.0,  0.0, -1.0,

   // Top
    0.0,  1.0,  0.0,
    0.0,  1.0,  0.0,
    0.0,  1.0,  0.0,
    0.0,  1.0,  0.0,


   // Bottom
    0.0, -1.0,  0.0,
    0.0, -1.0,  0.0,
    0.0, -1.0,  0.0,
    0.0, -1.0,  0.0,


   // Right
    1.0,  0.0,  0.0,
    1.0,  0.0,  0.0,
    1.0,  0.0,  0.0,
    1.0,  0.0,  0.0,
 

   // Left
   -1.0,  0.0,  0.0,
   -1.0,  0.0,  0.0,
   -1.0,  0.0,  0.0,
   -1.0,  0.0,  0.0,

  ]
 